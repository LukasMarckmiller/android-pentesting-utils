import subprocess
import sys,os

BURP_CERT_OUTPUT = '/tmp/burpcert.pem'

print('[*] Checking Environment',end='\r')
out = subprocess.run(['command','-v','openssl'],shell=True)
if out.returncode:
    print('[!] openssl not installed. Run \'apt install openssl first\'.')
    sys.exit(1)
out = subprocess.run(['command','-v','adb'], shell=True)
if out.returncode:
    print('[!] adb not installed. Run \'apt install adb first\'.')
    sys.exit(1)

subject_hash = ''
print('[+] Environment looks fine. All needed tools are installed.')
if not os.path.isfile(BURP_CERT_OUTPUT):
    print('[+] Enter BurpSuite certificate path (BurpSuite->Proxy->Options->Import/export CA Certificate->Certificate in DER format): ', end=' ')
    path = input()
    if not os.path.isfile(path) or (os.path.splitext(path)[1].lower() != '.der' and os.path.splitext(path)[1].lower() != '.pem'): 
        print('[!] Not a file or file not in pem or der format.')    
        sys.exit(1)

    if os.path.splitext(path)[1].lower() == '.der':
        out = subprocess.run(['openssl','x509','-inform', 'DER','-in',path, '-out', BURP_CERT_OUTPUT])
        if out.returncode:
            print('[!] Error running openssl: Error converting certificate from der to pem format.\r\nSTDERR: {}'.format(out.stderr))
            sys.exit(1)
else:
    print('[+] Found already prepared BurpSuite certificate in /tmp. Skipping preperation.')
out = subprocess.run(['openssl','x509','-inform', 'PEM', '-subject_hash_old', '-in',BURP_CERT_OUTPUT], capture_output=True)
if out.returncode:
    # Fallback to OpenSSL < 1.0
    out = subprocess.run(['openssl','x509','-inform', 'PEM', '-hash_old', '-in',BURP_CERT_OUTPUT], capture_output=True)
    if out.returncode:
        print('[!] Error running openssl: Error extracting subject_hash.\r\nSTDERR: {}'.format(out.stderr))
        sys.exit(1)
subject_hash = (out.stdout).decode('utf-8').split('\n')[0]

print('[+] Successfully prepared BurpSuite certificate.')
print('[*] Installing certificate on device.', end='\r')

try:
    out = subprocess.run(['adb','root'],timeout=5, stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT)
    if out.returncode:
        print('[!] Error cant mount adb device as root.')
        sys.exit(1)

    out = subprocess.run(['adb','remount'], timeout=5, stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT)
    if out.returncode:
        print('[!] Error cant remount adb device.')
        sys.exit(1)

    out = subprocess.run(['mv',BURP_CERT_OUTPUT,'/tmp/'+subject_hash+'.0'])
    if out.returncode:
        print('[!] Cant rename /tmp/burpcert.pem.')
        sys.exit(1)

    out = subprocess.run(['adb','push','/tmp/'+subject_hash+'.0','/sdcard/'], timeout=5, stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT)
    if out.returncode:
        print('[!] Error cant transfer certificate to adb device.')
        sys.exit(1)

    out = subprocess.run(['adb','shell','mv','/sdcard/'+subject_hash+'.0','/system/etc/security/cacerts/'], timeout=5, stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT)
    if out.returncode:
        print('[!] Error mv certificate to system cert store at /system/etc/security/cacerts/')
        sys.exit(1)

    out = subprocess.run(['adb','shell','chmod','644','/system/etc/security/cacerts/'+subject_hash+'.0'], timeout=5, stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT)
    if out.returncode:
        print('[!] Error settings system ca certificate permissions')
        sys.exit(1)

except subprocess.TimeoutExpired:
    print('[!] Error cant connect to adb device. Run adb connect <host>[:<port>] first.')
    sys.exit(1)

print('[+] Certificate was successfully installed on device :).')